<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" >

	<!-- ========== Динамические ресурсы (меняются при смене темы) ========== -->
	<!-- Цветовая палитра -->
	<Color x:Key="PrimaryColor">#43FFA4</Color>
	<Color x:Key="PrimaryDarkColor">#36D489</Color>
	<Color x:Key="PrimaryDarkerColor">#2ABF7A</Color>
	<Color x:Key="SecondaryColor">#2DEAFF</Color>
	<Color x:Key="BackgroundColor">#1E1E1E</Color>
	<!-- Основной фон -->
	<Color x:Key="TextColor">#D7EDD7</Color>
    <Color x:Key="TextColor1">black</Color>
	<Color x:Key="TextLightColor">#A8DBA8</Color>
	<Color x:Key="TextLighterColor">#7AB97A</Color>
	<Color x:Key="OverlayColor">#80000000</Color>
	<Color x:Key="InputBackgroundColor">#333333</Color>
	<!-- Фон полей ввода -->
	<Color x:Key="BorderColor">#43FFA4</Color>
    <Color x:Key="SaleColor">#ffe291</Color>
    <!-- Цвет границ -->

	<!-- Кисти -->
	<SolidColorBrush x:Key="PrimaryBrush" Color="{DynamicResource PrimaryColor}"/>
	<SolidColorBrush x:Key="PrimaryDarkBrush" Color="{DynamicResource PrimaryDarkColor}"/>
	<SolidColorBrush x:Key="PrimaryDarkerBrush" Color="{DynamicResource PrimaryDarkerColor}"/>
	<SolidColorBrush x:Key="SecondaryBrush" Color="{DynamicResource SecondaryColor}"/>
	<SolidColorBrush x:Key="BackgroundBrush" Color="{DynamicResource BackgroundColor}"/>
	<SolidColorBrush x:Key="TextBrush" Color="{DynamicResource TextColor}"/>
	<SolidColorBrush x:Key="TextLightBrush" Color="{DynamicResource TextLightColor}"/>
	<SolidColorBrush x:Key="TextLighterBrush" Color="{DynamicResource TextLighterColor}"/>
	<SolidColorBrush x:Key="OverlayBrush" Color="{DynamicResource OverlayColor}"/>
	<SolidColorBrush x:Key="InputBackgroundBrush" Color="{DynamicResource InputBackgroundColor}"/>
	<SolidColorBrush x:Key="BorderBrush" Color="{DynamicResource BorderColor}"/>
    <SolidColorBrush x:Key="SaleBrush" Color="{DynamicResource PrimaryColor}"/>
    <SolidColorBrush x:Key="TextBrush1" Color="{DynamicResource TextColor1}"/>
    <SolidColorBrush x:Key="RatingStarActiveBrush" Color="#FFFFA500"/>
    <SolidColorBrush x:Key="AccentBrush" Color="#FF0078D7"/>
    <!-- Оранжевый для активных звезд -->
    <SolidColorBrush x:Key="RatingStarInactiveBrush" Color="#FFD3D3D3"/>
    <!-- Светло-серый для неактивных -->
    <!-- Градиенты -->
	<LinearGradientBrush x:Key="DividerGradient" StartPoint="0,0" EndPoint="1,0">
		<GradientStop Color="{DynamicResource SecondaryColor}" Offset="0"/>
		<GradientStop Color="{DynamicResource PrimaryColor}" Offset="0.5"/>
		<GradientStop Color="{DynamicResource SecondaryColor}" Offset="1"/>
	</LinearGradientBrush>

	<!-- ========== Статические ресурсы (не меняются) ========== -->
	<LinearGradientBrush x:Key="ImageOpacityGradient" StartPoint="0.5,0" EndPoint="0.5,1">
		<GradientStop Color="Black" Offset="0"/>
		<GradientStop Color="Black" Offset="0.9"/>
		<GradientStop Color="Transparent" Offset="1"/>
	</LinearGradientBrush>

	<!-- Эффекты -->
	<DropShadowEffect x:Key="TextShadowEffect" Color="Black" BlurRadius="8" Opacity="0.8" ShadowDepth="2"/>
	<DropShadowEffect x:Key="TextSmallShadowEffect" Color="Black" BlurRadius="4" Opacity="0.6" ShadowDepth="1"/>
	<DropShadowEffect x:Key="TextMediumShadowEffect" Color="Black" BlurRadius="6" Opacity="0.7" ShadowDepth="1.5"/>
	<DropShadowEffect x:Key="TextLargeShadowEffect" Color="Black" BlurRadius="10" Opacity="0.8"/>
	<DropShadowEffect x:Key="LogoTextEffect" Color="White" BlurRadius="20" Opacity="0.8"/>

	<!-- Курсоры -->
	<Cursor x:Key="PointerCursor">Hand</Cursor>
	<Cursor x:Key="DefaultCursor">Arrow</Cursor>

	<!-- Шрифты -->
	<FontFamily x:Key="MainFont">Arial</FontFamily>
	<FontFamily x:Key="LogoFont">Arial</FontFamily>

	<!-- Иконки -->
	<BitmapImage x:Key="LeftArrowIcon" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\levo.png"/>
	<BitmapImage x:Key="RightArrowIcon" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\pravo.png"/>
	<BitmapImage x:Key="UserIcon" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\UserWithoutLogIn.png"/>
	<BitmapImage x:Key="RussianFlag" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\russian_flag.png"/>
	<BitmapImage x:Key="EnglishFlag" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\english_flag.png"/>
	<BitmapImage x:Key="Promo1Image" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\promo1.jpg"/>
	<BitmapImage x:Key="Promo2Image" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\promo2.jpg"/>
	<BitmapImage x:Key="MainBackground" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\background.png"/>
	<BitmapImage x:Key="MainHeaderImage" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\mainimages.png"/>
	<BitmapImage x:Key="MoonSunImage" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\moon.png"/>
    <BitmapImage x:Key="MapImage" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\club_map.png"/>

    <!-- Анимации -->
	<Storyboard x:Key="HoverAnimation">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0.3" Duration="0:0:0.3"/>
	</Storyboard>
	<Storyboard x:Key="UnhoverAnimation">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
	</Storyboard>
	<Storyboard x:Key="LogoAnimation">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" From="0" To="1" Duration="0:0:2" BeginTime="0:0:1"/>
	</Storyboard>
	<Storyboard x:Key="PromoContentFadeIn">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
	</Storyboard>
	<Storyboard x:Key="PromoContentFadeOut">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
	</Storyboard>
	<Storyboard x:Key="OverlayFadeIn">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" To="1" Duration="0:0:0.3"/>
	</Storyboard>
	<Storyboard x:Key="OverlayFadeOut">
		<DoubleAnimation Storyboard.TargetProperty="Opacity" To="0" Duration="0:0:0.3"/>
	</Storyboard>

	<!-- ========== Стили (особая обработка BasedOn) ========== -->
	<!-- Базовый стиль кнопки -->
	<Style x:Key="BaseButtonStyle" TargetType="Button">
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="FontSize" Value="30"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Cursor" Value="{StaticResource PointerCursor}"/>
		<Setter Property="Padding" Value="15 8"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border x:Name="border" Background="Transparent" BorderThickness="0" Cursor="{TemplateBinding Cursor}">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource TextLightBrush}"/>
							<Setter TargetName="border" Property="Background" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
                        </Trigger>
						<Trigger Property="IsPressed" Value="True">
							<Setter Property="Foreground" Value="{DynamicResource TextLighterBrush}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<!-- Производные стили (BasedOn должен быть StaticResource) -->
	<Style x:Key="ThemeToggleButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0"
                            CornerRadius="12">
						<ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
    <Style x:Key="BookButtonStyle" TargetType="Button" BasedOn="{StaticResource   BaseButtonStyle}">
        <Setter Property="Width" Value="300"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="0,20,0,40"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Background" Value="{DynamicResource  PrimaryBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Border x:Name="border" 
                            CornerRadius="30" 
                            Background="{TemplateBinding Background}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <Rectangle x:Name="hoverOverlay" 
                               Fill="Black" 
                               Opacity="0"
                               RadiusX="30" 
                               RadiusY="30"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="IsEnabled" Value="True"/>
                            </MultiTrigger.Conditions>
                            <MultiTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="hoverOverlay"
                          Storyboard.TargetProperty="Opacity"
                          To="0.3" 
                          Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.EnterActions>
                            <MultiTrigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="hoverOverlay"
                          Storyboard.TargetProperty="Opacity"
                          To="0" 
                          Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </MultiTrigger.ExitActions>
                            <Setter Property="Cursor" Value="{DynamicResource  PointerCursor}"/>
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource  PrimaryDarkBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource  PrimaryDarkerBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ProfileButtonStyle" TargetType="Button" BasedOn="{StaticResource   BaseButtonStyle}">
        <Setter Property="Width" Value="50"/>
        <Setter Property="Height" Value="50"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"  
                        Cursor="{TemplateBinding Cursor}"
                        CornerRadius="25" 
                        Background="Transparent" 
                        BorderBrush="Transparent" 
                        BorderThickness="1"
                        Width="{TemplateBinding Width}"
                        Height="{TemplateBinding Height}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="BorderThickness" Value="1"/>
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource  PrimaryBrush}"/>
                            <Setter Property="Cursor" Value="{DynamicResource  PointerCursor}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#40FFFFFF"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="FlagButtonStyle" TargetType="Button" BasedOn="{StaticResource  BaseButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="Transparent" CornerRadius="3" Cursor="{TemplateBinding Cursor}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
    </Style>
	<Style x:Key="PromoButton1Style" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button" >
					<Grid Width="400" Height="600" Cursor="{TemplateBinding Cursor}">
						<Image Source="{StaticResource Promo1Image}" Stretch="UniformToFill">
							<Image.OpacityMask>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<GradientStop Color="Black" Offset="0"/>
									<GradientStop Color="Black" Offset="0.9"/>
									<GradientStop Color="Transparent" Offset="1"/>
								</LinearGradientBrush>
							</Image.OpacityMask>
						</Image>
						<Rectangle x:Name="Overlay" Fill="{DynamicResource OverlayBrush}" Opacity="0"/>
						<StackPanel x:Name="DefaultContent" VerticalAlignment="Center" HorizontalAlignment="Center">
							<TextBlock x:Name="TitleText" Text="{TemplateBinding Content}"
           FontSize="36" FontWeight="Bold" Foreground="{DynamicResource  PrimaryBrush}"
           HorizontalAlignment="Center">
								<TextBlock.Effect>
									<DropShadowEffect Color="Black" BlurRadius="8" Opacity="0.8" ShadowDepth="2"/>
								</TextBlock.Effect>
							</TextBlock>
							<TextBlock x:Name="SubtitleText" Text="{TemplateBinding ToolTip}"
           FontSize="18" FontWeight="SemiBold" Foreground="White"
           HorizontalAlignment="Center" Margin="0,10,0,0">
								<TextBlock.Effect>
									<DropShadowEffect Color="Black" BlurRadius="4" Opacity="0.6" ShadowDepth="1"/>
								</TextBlock.Effect>
							</TextBlock>
							<TextBlock x:Name="DiscountText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandParameter}"
           FontSize="28" FontWeight="Bold" Foreground="{DynamicResource  PrimaryBrush}"
           HorizontalAlignment="Center" Margin="0,5,0,0">
								<TextBlock.Effect>
									<DropShadowEffect Color="Black" BlurRadius="6" Opacity="0.7" ShadowDepth="1.5"/>
								</TextBlock.Effect>
							</TextBlock>
						</StackPanel>

						<TextBlock x:Name="HoverText" Text="{Binding Localization[PromoHoverText]}"
                           FontSize="24" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}"
                           HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
							<TextBlock.Effect>
								<DropShadowEffect Color="Black" BlurRadius="10" Opacity="0.8"/>
							</TextBlock.Effect>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Cursor" Value="{DynamicResource  PointerCursor}"/>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<!-- Анимация появления затемнения -->
										<DoubleAnimation Storyboard.TargetName="Overlay"
                          Storyboard.TargetProperty="Opacity"
                          To="1" Duration="0:0:0.3"/>

										<!-- Анимация исчезновения основного контента -->
										<DoubleAnimation Storyboard.TargetName="DefaultContent"
                          Storyboard.TargetProperty="Opacity"
                          To="0" Duration="0:0:0.3"/>

										<!-- Анимация появления текста при наведении -->
										<DoubleAnimation Storyboard.TargetName="HoverText"
                          Storyboard.TargetProperty="Opacity"
                          To="1" Duration="0:0:0.3"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<!-- Анимация исчезновения затемнения -->
										<DoubleAnimation Storyboard.TargetName="Overlay"
                          Storyboard.TargetProperty="Opacity"
                          To="0" Duration="0:0:0.3"/>

										<!-- Анимация появления основного контента -->
										<DoubleAnimation Storyboard.TargetName="DefaultContent"
                          Storyboard.TargetProperty="Opacity"
                          To="1" Duration="0:0:0.3"/>

										<!-- Анимация исчезновения текста при наведении -->
										<DoubleAnimation Storyboard.TargetName="HoverText"
                          Storyboard.TargetProperty="Opacity"
                          To="0" Duration="0:0:0.3"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<!--/<DataTrigger Binding="{Binding Source, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
						<Setter TargetName="MainImage" Property="Source" Value="D:\ООП\CyberHeaven\CyberHeaven\images\promo2.jpg"/>
						<Setter TargetName="MainImage" Property="Opacity" Value="0.7"/>
					</DataTrigger>-->
						<EventTrigger RoutedEvent="MouseEnter">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="Overlay"
                      Storyboard.TargetProperty="Opacity"
                      To="1" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="DefaultContent"
                      Storyboard.TargetProperty="Opacity"
                      To="0" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="HoverText"
                      Storyboard.TargetProperty="Opacity"
                      To="1" Duration="0:0:0.3"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="MouseLeave">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="Overlay"
                      Storyboard.TargetProperty="Opacity"
                      To="0" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="DefaultContent"
                      Storyboard.TargetProperty="Opacity"
                      To="1" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="HoverText"
                      Storyboard.TargetProperty="Opacity"
                      To="0" Duration="0:0:0.3"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="PromoButton2Style" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="Button">
					<Grid Width="400" Height="600"  Cursor="{TemplateBinding Cursor}">
						<Image Source="{StaticResource Promo2Image}" Stretch="UniformToFill">
							<Image.OpacityMask>
								<LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
									<GradientStop Color="Black" Offset="0"/>
									<GradientStop Color="Black" Offset="0.9"/>
									<GradientStop Color="Transparent" Offset="1"/>
								</LinearGradientBrush>
							</Image.OpacityMask>
						</Image>
						<Rectangle x:Name="Overlay" Fill="{DynamicResource OverlayBrush}" Opacity="0"/>
						<StackPanel x:Name="DefaultContent" VerticalAlignment="Center" HorizontalAlignment="Center">
							<TextBlock x:Name="TitleText" Text="{TemplateBinding Content}"
           FontSize="36" FontWeight="Bold" Foreground="{DynamicResource  PrimaryBrush}"
           HorizontalAlignment="Center">
								<TextBlock.Effect>
									<DropShadowEffect Color="Black" BlurRadius="8" Opacity="0.8" ShadowDepth="2"/>
								</TextBlock.Effect>
							</TextBlock>
							<TextBlock x:Name="SubtitleText" Text="{TemplateBinding ToolTip}"
           FontSize="18" FontWeight="SemiBold" Foreground="White"
           HorizontalAlignment="Center" Margin="0,10,0,0">
								<TextBlock.Effect>
									<DropShadowEffect Color="Black" BlurRadius="4" Opacity="0.6" ShadowDepth="1"/>
								</TextBlock.Effect>
							</TextBlock>
							<TextBlock x:Name="DiscountText" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandParameter}"
           FontSize="28" FontWeight="Bold" Foreground="{DynamicResource  PrimaryBrush}"
           HorizontalAlignment="Center" Margin="0,5,0,0">
								<TextBlock.Effect>
									<DropShadowEffect Color="Black" BlurRadius="6" Opacity="0.7" ShadowDepth="1.5"/>
								</TextBlock.Effect>
							</TextBlock>
						</StackPanel>

						<TextBlock x:Name="HoverText" Text="{Binding Localization[PromoHoverText]}"
                       FontSize="24" FontWeight="Bold" Foreground="{DynamicResource PrimaryBrush}"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Opacity="0">
							<TextBlock.Effect>
								<DropShadowEffect Color="Black" BlurRadius="10" Opacity="0.8"/>
							</TextBlock.Effect>
						</TextBlock>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Cursor" Value="{DynamicResource  PointerCursor}"/>
							<Trigger.EnterActions>
								<BeginStoryboard>
									<Storyboard>
										<!-- Анимация появления затемнения -->
										<DoubleAnimation Storyboard.TargetName="Overlay"
                      Storyboard.TargetProperty="Opacity"
                      To="1" Duration="0:0:0.3"/>

										<!-- Анимация исчезновения основного контента -->
										<DoubleAnimation Storyboard.TargetName="DefaultContent"
                      Storyboard.TargetProperty="Opacity"
                      To="0" Duration="0:0:0.3"/>

										<!-- Анимация появления текста при наведении -->
										<DoubleAnimation Storyboard.TargetName="HoverText"
                      Storyboard.TargetProperty="Opacity"
                      To="1" Duration="0:0:0.3"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.EnterActions>
							<Trigger.ExitActions>
								<BeginStoryboard>
									<Storyboard>
										<!-- Анимация исчезновения затемнения -->
										<DoubleAnimation Storyboard.TargetName="Overlay"
                      Storyboard.TargetProperty="Opacity"
                      To="0" Duration="0:0:0.3"/>

										<!-- Анимация появления основного контента -->
										<DoubleAnimation Storyboard.TargetName="DefaultContent"
                      Storyboard.TargetProperty="Opacity"
                      To="1" Duration="0:0:0.3"/>

										<!-- Анимация исчезновения текста при наведении -->
										<DoubleAnimation Storyboard.TargetName="HoverText"
                      Storyboard.TargetProperty="Opacity"
                      To="0" Duration="0:0:0.3"/>
									</Storyboard>
								</BeginStoryboard>
							</Trigger.ExitActions>
						</Trigger>
						<!--/<DataTrigger Binding="{Binding Source, RelativeSource={RelativeSource Self}}" Value="{x:Null}">
					<Setter TargetName="MainImage" Property="Source" Value="D:\ООП\CyberHeaven\CyberHeaven\images\promo2.jpg"/>
					<Setter TargetName="MainImage" Property="Opacity" Value="0.7"/>
				</DataTrigger>-->
						<EventTrigger RoutedEvent="MouseEnter">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="Overlay"
                  Storyboard.TargetProperty="Opacity"
                  To="1" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="DefaultContent"
                  Storyboard.TargetProperty="Opacity"
                  To="0" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="HoverText"
                  Storyboard.TargetProperty="Opacity"
                  To="1" Duration="0:0:0.3"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
						<EventTrigger RoutedEvent="MouseLeave">
							<BeginStoryboard>
								<Storyboard>
									<DoubleAnimation Storyboard.TargetName="Overlay"
                  Storyboard.TargetProperty="Opacity"
                  To="0" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="DefaultContent"
                  Storyboard.TargetProperty="Opacity"
                  To="1" Duration="0:0:0.3"/>
									<DoubleAnimation Storyboard.TargetName="HoverText"
                  Storyboard.TargetProperty="Opacity"
                  To="0" Duration="0:0:0.3"/>
								</Storyboard>
							</BeginStoryboard>
						</EventTrigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>


    <Style x:Key="LogoTextStyle" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{DynamicResource  LogoFont}"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource  PrimaryBrush}"/>
        <Setter Property="Opacity" Value="0"/>
        <Setter Property="FontSize" Value="90"/>
        <Setter Property="Effect" Value="{DynamicResource  LogoTextEffect}"/>
    </Style>

    <Style x:Key="MainWindowStyle" TargetType="Window">
        <Setter Property="WindowState" Value="Maximized"/>
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Window">
                    <Border Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="*"/>
                            </Grid.RowDefinitions>

                            <!-- Фоновое изображение -->
                            <Image Grid.RowSpan="2" Source="{DynamicResource  MainBackground}" Stretch="UniformToFill"/>

                            <!-- Содержимое окна -->
                            <AdornerDecorator Grid.RowSpan="2">
                                <ContentPresenter/>
                            </AdornerDecorator>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

	<Style x:Key="AuthTextBoxStyle" TargetType="TextBox">
		<Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Margin" Value="0,0,0,15"/>
		<Setter Property="Padding" Value="5"/>
	</Style>

	<Style x:Key="AuthPasswordBoxStyle" TargetType="PasswordBox">
		<Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
		<Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
		<Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
		<Setter Property="BorderThickness" Value="1"/>
		<Setter Property="Height" Value="30"/>
		<Setter Property="Margin" Value="0,0,0,15"/>
		<Setter Property="Padding" Value="5"/>
	</Style>

	<Style x:Key="ErrorTextStyle" TargetType="TextBlock">
		<Setter Property="Foreground" Value="Red"/>
		<Setter Property="Margin" Value="0,0,0,10"/>
		<Setter Property="TextWrapping" Value="Wrap"/>
		<Setter Property="FontSize" Value="12"/>
	</Style>

	<Style x:Key="AuthButtonStyle" TargetType="Button">
		<Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
		<Setter Property="Foreground" Value="Black"/>
		<Setter Property="FontWeight" Value="Bold"/>
		<Setter Property="Height" Value="40"/>
		<Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="5"
                            Cursor="{TemplateBinding Cursor}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RegisterLinkButtonStyle" TargetType="Button">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
		<Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Text="{TemplateBinding Content}" 
                               TextDecorations="Underline"
                               Cursor="{TemplateBinding Cursor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RegisterTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,0,0,15"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- Стиль для ComboBox -->
    <Style x:Key="RegisterComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,0,5,15"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Width" Value="100"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ComboBoxItemStyle}"/>
    </Style>

    <!-- Стиль для PasswordBox -->
    <Style x:Key="RegisterPasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
        <Setter Property="Padding" Value="5"/>
    </Style>

    <!-- Стиль для кнопки регистрации -->
    <Style x:Key="RegisterButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                          CornerRadius="5"
                          Cursor="{TemplateBinding Cursor}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Стиль для ссылки на авторизацию -->
    <Style x:Key="LoginLinkButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <TextBlock Text="{TemplateBinding Content}" 
                             TextDecorations="Underline"
                             Cursor="{TemplateBinding Cursor}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--АКЦИИ -->


    <!-- Стиль для кнопки создания промоакции -->
    <Style x:Key="CreatePromoButtonStyle" TargetType="Button" BasedOn="{StaticResource BookButtonStyle}">
        <Setter Property="Content" Value="Создать акцию"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>

    <!-- Стиль для кнопок в формах промоакций -->
    <Style x:Key="PromoFormButtonStyle" TargetType="Button" BasedOn="{StaticResource BookButtonStyle}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- Стиль для кнопки удаления промоакции -->
    <Style x:Key="DeletePromoButtonStyle" TargetType="Button" BasedOn="{StaticResource BookButtonStyle}">
        <Setter Property="Content" Value="Удалить акцию"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Background" Value="#FF6B6B"/>
    </Style>

    <!-- Стиль для кнопки редактирования промоакции -->
    <Style x:Key="EditPromoButtonStyle" TargetType="Button" BasedOn="{StaticResource BookButtonStyle}">
        <Setter Property="Content" Value="Редактировать акцию"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Background" Value="#FFD166"/>
    </Style>


    <!-- Стиль для кнопок промоакций -->
    <Style x:Key="PromoButtonStyle" TargetType="Button">
        <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="400" Height="600">
                        <!-- Граница кнопки -->
                        <Border x:Name="ButtonBorder" BorderBrush="{DynamicResource BorderBrush}" BorderThickness="2" CornerRadius="10">
                            <Border.Effect>
                                <DropShadowEffect Color="{DynamicResource PrimaryDarkerColor}" BlurRadius="10" Opacity="0.7"/>
                            </Border.Effect>
                        </Border>

                        <!-- Основное изображение -->
                        <Image x:Name="MainImage" Source="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Tag}"
                               Stretch="UniformToFill" Margin="2">
                            <Image.OpacityMask>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Color="Black" Offset="0"/>
                                    <GradientStop Color="Black" Offset="0.9"/>
                                    <GradientStop Color="Transparent" Offset="1"/>
                                </LinearGradientBrush>
                            </Image.OpacityMask>
                        </Image>

                        <!-- Затемнение при наведении -->
                        <Rectangle x:Name="Overlay" Fill="#80000000" Opacity="0" RadiusX="8" RadiusY="8" Margin="2"/>

                        <!-- Контент по умолчанию (только название) -->
                        <StackPanel x:Name="DefaultContent" VerticalAlignment="Center" HorizontalAlignment="Center">
                            <TextBlock x:Name="TitleText" Text="{TemplateBinding Content}" 
                                   FontSize="36" FontWeight="Bold" Foreground="{DynamicResource  PrimaryBrush}"
                                   HorizontalAlignment="Center" TextWrapping="Wrap" MaxWidth="380">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="8" Opacity="0.8" ShadowDepth="2"/>
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>

                        <!-- Контент при наведении -->
                        <StackPanel x:Name="HoverContent" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0">
                            <TextBlock x:Name="HoverTitle" Text="{TemplateBinding Content}" 
                                   FontSize="28" FontWeight="Bold" Foreground="{DynamicResource  PrimaryBrush}"
                                   HorizontalAlignment="Center" TextWrapping="Wrap" MaxWidth="380" Margin="0,0,0,10">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="8" Opacity="0.8" ShadowDepth="2"/>
                                </TextBlock.Effect>
                            </TextBlock>
                            <TextBlock x:Name="DescriptionText" Text="{TemplateBinding ToolTip}" 
                                   FontSize="18" Foreground="White" TextWrapping="Wrap"
                                   HorizontalAlignment="Center" MaxWidth="360" Margin="10">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="4" Opacity="0.6" ShadowDepth="1"/>
                                </TextBlock.Effect>
                            </TextBlock>
                            <TextBlock Text="{Binding DataContext.Localization[ClickToCopy], 
                  RelativeSource={RelativeSource AncestorType=ItemsControl}}"
           FontSize="20" FontWeight="Bold" 
           Foreground="{DynamicResource PrimaryBrush}"
           HorizontalAlignment="Center" Margin="0,20,0,0" 
           TextWrapping="Wrap">
                                <TextBlock.Effect>
                                    <DropShadowEffect Color="Black" BlurRadius="6" Opacity="0.7"/>
                                </TextBlock.Effect>
                            </TextBlock>
                        </StackPanel>

                        <!-- Код акции (скрытый, для копирования) -->
                        <TextBlock x:Name="PromoCode" Text="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=CommandParameter}" 
                               Visibility="Collapsed"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
 
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Overlay"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0.8" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="DefaultContent"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="HoverContent"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                    Storyboard.TargetProperty="BorderBrush.Color"
                                                    To="#2DEAFF" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetName="Overlay"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="DefaultContent"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="1" Duration="0:0:0.3"/>
                                        <DoubleAnimation Storyboard.TargetName="HoverContent"
                                                 Storyboard.TargetProperty="Opacity"
                                                 To="0" Duration="0:0:0.3"/>
                                        <ColorAnimation Storyboard.TargetName="ButtonBorder"
                                                    Storyboard.TargetProperty="BorderBrush.Color"
                                                    To="#43FFA4" Duration="0:0:0.3"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- DataTemplate для элементов промоакций -->
    <DataTemplate x:Key="PromoItemTemplate">
        <Grid>
            <Button Style="{StaticResource PromoButtonStyle}"
                    Command="{Binding DataContext.CopyPromoCodeCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                    CommandParameter="{Binding Code}"
                    Content="{Binding Title}"
                    ToolTip="{Binding Description}"
                    Tag="{Binding ImagePath}">
            </Button>
        </Grid>
    </DataTemplate>

    <Style TargetType="Button" x:Key="BackButtonStyle">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid>
                        <Image Source="/images/back_icon.png" Width="30" Height="30"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- UserWindow Styles -->
    <Style x:Key="UserPanelBackgroundStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource PrimaryDarkerColor}" 
                             BlurRadius="10" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserNameTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="8" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="UserEmailTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource TextLightBrush}"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
    </Style>

    <Style x:Key="EditProfileButtonStyle" TargetType="Button" BasedOn="{StaticResource BookButtonStyle}">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,30"/>
    </Style>

    <Style x:Key="SideMenuButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="20,15"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Margin" Value="0,5,0,0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                        Background="Transparent" 
                        CornerRadius="5"
                        Cursor="{TemplateBinding Cursor}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                  VerticalAlignment="Center"
                                  Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource PrimaryDarkColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LogoutButtonStyle" TargetType="Button" BasedOn="{StaticResource SideMenuButtonStyle}">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Margin" Value="0,20,0,0"/>
    </Style>

    <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="28"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Margin" Value="20,20,20,30"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" BlurRadius="10" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BookingItemStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Margin" Value="20,0,20,15"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource PrimaryDarkerColor}" 
                             BlurRadius="5" Opacity="0.3"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="BookingComputerNameStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryBrush}"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
    </Style>

    <Style x:Key="BookingDetailStyle" TargetType="TextBlock" >
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,5"/>
    </Style>

    <Style x:Key="BookingStatusStyle" TargetType="TextBlock" BasedOn="{StaticResource BookingDetailStyle}">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryBrush}"/>
    </Style>

    <Style x:Key="CancelBookingButtonStyle" TargetType="Button" BasedOn="{StaticResource BookButtonStyle}">
        <Setter Property="Content" Value="Отменить"/>
        <Setter Property="Width" Value="120"/>
        <Setter Property="Height" Value="35"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="#FF6B6B"/>
        <Setter Property="Margin" Value="0,0,0,0"/>
    </Style>

    

    <Style x:Key="SettingsPasswordBoxStyle" TargetType="PasswordBox" BasedOn="{StaticResource AuthPasswordBoxStyle}">
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Width" Value="300"/>
    </Style>

    <Style x:Key="SaveSettingsButtonStyle" TargetType="Button" BasedOn="{StaticResource BookButtonStyle}">
        <Setter Property="Content" Value="Сохранить"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="Margin" Value="0,20,0,0"/>
    </Style>

    <Style x:Key="UserAvatarStyle" TargetType="Image">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="150"/>
        <Setter Property="Margin" Value="0,0,0,20"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="{DynamicResource PrimaryDarkerColor}" 
                             BlurRadius="15" Opacity="0.7"/>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SortButtonStyle" BasedOn="{StaticResource BookButtonStyle}" TargetType="Button">
        <Setter Property="Width" Value="150"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="Padding" Value="10,5"/>
    </Style>
    <Style x:Key="AdminButtonStyle" BasedOn="{StaticResource BookButtonStyle}" TargetType="Button">
        <Setter Property="Width" Value="200"/>
        <Setter Property="Height" Value="40"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Margin" Value="5"/>
    </Style>
    <Style x:Key="PlaceButtonStyle" TargetType="Button">
        <Setter Property="Width" Value="60"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="5"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" 
                                CornerRadius="5" 
                                Background="{TemplateBinding Background}" 
                                BorderThickness="1"
                                BorderBrush="{TemplateBinding BorderBrush}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Cursor" Value="Hand"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

 
    <Style x:Key="ComboBoxItemStyle" TargetType="ComboBoxItem">
        <Setter Property="Cursor" Value="{DynamicResource PointerCursor}"/>
        <Setter Property="Foreground" Value="{DynamicResource TextBrush1}"/>

    </Style>

    <!-- Стиль для кнопки сохранения -->
    <Style x:Key="SaveButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#4CAF50"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="100"/>
    </Style>

    <!-- Стиль для кнопки отмены -->
    <Style x:Key="CancelButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#F44336"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Width" Value="100"/>
    </Style>
    
<!--ПОЛЬХОВАТЕЛЬСКАЯ-->
    <Style x:Key="BookingsItemsControlStyle" TargetType="ItemsControl">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel Orientation="Vertical"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ItemsControl">
                    <Border Background="{TemplateBinding Background}"
                          BorderBrush="{TemplateBinding BorderBrush}"
                          BorderThickness="{TemplateBinding BorderThickness}">
                        <ScrollViewer>
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="UserFieldLabelStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
        <Setter Property="Margin" Value="0,0,0,2"/>
    </Style>

    <Style x:Key="UserFieldValueStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Margin" Value="0,0,0,10"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

  

    <Style x:Key="NoBookingsTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Стили для бронирований -->

    <Style x:Key="BookingStatusBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource AccentLightBrush}"/>
        <Setter Property="CornerRadius" Value="5"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="MinWidth" Value="100"/>
    </Style>

    <!-- Стиль для TextBox в режиме редактирования -->
    <Style x:Key="EditTextBoxStyle" TargetType="TextBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Padding" Value="0 5"/>
        <Setter Property="Margin" Value="0 0 0 10"/>
    </Style>

    <Style x:Key="PasswordBoxStyle" TargetType="PasswordBox">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{DynamicResource TextColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="{DynamicResource AccentColor}"/>
        <Setter Property="BorderThickness" Value="0 0 0 1"/>
        <Setter Property="Padding" Value="0 5"/>
        <Setter Property="Margin" Value="0 0 0 10"/>
    </Style>

    <!-- Стили для окна отзывов -->
    <Style x:Key="StarRatingStyle" TargetType="RadioButton">
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="Foreground" Value="{DynamicResource StarInactiveColor}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <TextBlock Text="★" 
                           Foreground="{TemplateBinding Foreground}"
                           FontSize="{TemplateBinding FontSize}">
                        <TextBlock.Style>
                            <Style TargetType="TextBlock">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsChecked, RelativeSource={RelativeSource AncestorType=RadioButton}}" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource StarActiveColor}"/>
                                    </DataTrigger>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Foreground" Value="{DynamicResource StarHoverColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </TextBlock.Style>
                    </TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ReviewTextBoxStyle" TargetType="TextBox">
        <Setter Property="MinHeight" Value="100"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="{DynamicResource InputBackground}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderColor}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="AcceptsReturn" Value="True"/>
    </Style>

    <Style x:Key="DeleteButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="Padding" Value="10,5"/>
    </Style>

    <Style x:Key="DateTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextColor}"/>
    </Style>

    <Style x:Key="RatingTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{DynamicResource StarActiveColor}"/>
        <Setter Property="Margin" Value="0,0,5,0"/>
    </Style>

    <Style x:Key="StarIconStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="{DynamicResource StarActiveColor}"/>
    </Style>

    <Style x:Key="CommentTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextColor}"/>
    </Style>

    <Style x:Key="AdminResponseTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="Foreground" Value="{DynamicResource AdminResponseTextColor}"/>
    </Style>
    <Style x:Key="RatingStarButtonStyle" TargetType="ToggleButton">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ToggleButton">
                    <TextBlock Text="★" FontSize="24"
                           Foreground="{TemplateBinding Foreground}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ApproveButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#4CAF50"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="RejectButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#F44336"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="CompleteButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#9C27B0"/>
        <!-- Фиолетовый -->
        <Setter Property="Foreground" Value="White"/>
    </Style>
    <Style x:Key="EditButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#FF9800"/>
        <!-- Оранжевый -->
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <Style x:Key="BlockButtonStyle" TargetType="Button" BasedOn="{StaticResource BaseButtonStyle}">
        <Setter Property="Background" Value="#F44336"/>
        <!-- Красный -->
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Стиль для кнопки переключения видимости пароля -->
    <Style x:Key="TogglePasswordButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="5"/>
        <Setter Property="Margin" Value="5,0,0,0"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#10000000"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="RatingFilterButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource TextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Width" Value="40"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- Иконки для кнопки видимости -->
    <ImageSource x:Key="EyeOpenIcon">D:\ООП\CyberHeaven\CyberHeaven\images\eye_open.png</ImageSource>
    <ImageSource x:Key="EyeClosedIcon">D:\ООП\CyberHeaven\CyberHeaven\images\eye_closed.png</ImageSource>

    <!-- Иконка темы (солнце для светлой темы) -->
    <BitmapImage x:Key="ThemeToggleIcon" UriSource="D:\ООП\CyberHeaven\CyberHeaven\images\sun.png"/>
</ResourceDictionary>